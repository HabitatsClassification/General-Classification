library(caretEnsemble)
library(caret)
library(dplyr)
library(here)
library(pROC)
library(doParallel)
cl <- makePSOCKcluster(3)
registerDoParallel(cl)

df <- read.csv(here("NTT_xgboost.csv"))
df <- df[,-1]
levels(df$vegetation.type) <- gsub("Coastal white-sand woodland"               ,"Restinga",       levels(df$vegetation.type))
levels(df$vegetation.type) <- gsub("Evergreen cloud dwarf-forest"              ,"Rainforest",     levels(df$vegetation.type))
levels(df$vegetation.type) <- gsub("Evergreen cloud forest"                    ,"Rainforest",     levels(df$vegetation.type))
levels(df$vegetation.type) <- gsub("Evergreen Rain forest"                     ,"Rainforest",     levels(df$vegetation.type))
levels(df$vegetation.type) <- gsub("Mixed Araucaria forest"                    ,"High.Elevation", levels(df$vegetation.type))
levels(df$vegetation.type) <- gsub("Rocky highland seasonal dwarf-forest"      ,"Rocky",          levels(df$vegetation.type))
levels(df$vegetation.type) <- gsub("Rocky highland seasonal savanna"           ,"Rocky",          levels(df$vegetation.type))
levels(df$vegetation.type) <- gsub("Seasonal semideciduous forest"             ,"Semideciduous",  levels(df$vegetation.type))
levels(df$vegetation.type) <- gsub("Subtropical riverine semideciduous forest" ,"High.Elevation", levels(df$vegetation.type))
levels(df$vegetation.type) <- gsub("Tropical riverine semideciduous forest"    ,"Riverine",       levels(df$vegetation.type))
head(df)

###### Clustering ####
nr <- createDataPartition(df[,1], p=0.9, list=FALSE)
train <- df[nr,]
test <- df[-nr,]

#train = clusters
table(train$vegetation.type)

rain <- train[train$vegetation.type == "Rainforest",-1]
rest <- train[train$vegetation.type == "Restinga",-1]
high <- train[train$vegetation.type == "High.Elevation",-1]
semi <- train[train$vegetation.type == "Semideciduous",-1]
rive <- train[train$vegetation.type == "Riverine",-1]

rain <- kmeans(rain, 65)
rest <- kmeans(rest, 65)
high <- kmeans(high, 65)
semi <- kmeans(semi, 65)
rive <- kmeans(rive, 65)

rain <- rain$centers
rest <- rest$centers
high <- high$centers
semi <- semi$centers
rive <- rive$centers

vegetation.type <- c(rep("Rainforest", 65), 
                     rep("Semideciduous", 65), 
                     rep("High.Elevation", 65), 
                     rep("Restinga", 65), 
                     rep("Riverine", 65), 
                     rep("Rocky", 65))
train <- cbind(vegetation.type, rbind(rain, semi, high, rest, rive, train[train$vegetation.type == "Rocky",-1]))
habitats <- levels(train[,1])
table(train$vegetation.type)
table(test$vegetation.type)

habitats_training <- function(n){
  final <- list()
  final_aucs <- list()
  for (j in 1:n){
    ensemble <- caretList(reformulate(termlabels = colnames(train)[-1], response=colnames(train)[1]),
                          data=train, 
                          trControl=trainControl(
                            method = "repeatedcv", 
                            number = 10, 
                            index = createFolds(train[,1], 10),
                            repeats = 10, 
                            savePredictions = 'final', 
                            classProbs = TRUE, 
                            summaryFunction = multiClassSummary,
                            allowParallel = T, 
                            returnResamp = "final",
                            selectionFunction = "best"), 
                          tuneList = list(
                            naive_bayes = caretModelSpec(method = "naive_bayes", 
                                                         tuneGrid = expand.grid(laplace = c(0),
                                                                                usekernel = TRUE,
                                                                                adjust = seq(0.65, 0.75, 0.01))),
                            nnet = caretModelSpec(method = "nnet", 
                                                  tuneGrid = expand.grid(size = seq(10, 30, 1),
                                                                         decay = seq(0.65,0.8,0.05))),
                            mlp = caretModelSpec(method = "mlp", 
                                                 tuneGrid = expand.grid(size = seq(10, 20, 1)))),
                          continue_on_fail=T,
                          metric="AUC")
    model_preds <- lapply(ensemble, predict, newdata=test, type="raw")
    x <- lapply(lapply(model_preds, as.numeric), multiclass.roc, response = as.numeric(test$vegetation.type))
    preds_auc <- NA
    for (i in 1:length(names(ensemble))){
      preds_auc[i] <- as.numeric(x[[i]]$auc)
    }
    final[[j]] <- ensemble[preds_auc > 0.6]
    final_aucs[[j]] <- preds_auc
  } 
  final_aucs <- cbind(names(ensemble), final_aucs)
  return(list(final,final_aucs))
}
  
  
test_1 <- habitats_training(1)
test_2 <- habitats_training(2)

  
  
  
  
  
  
